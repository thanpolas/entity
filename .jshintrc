/**
 * Project specific jshint linting options.
 *
 * Forked from Airbnb JSHint settings.
 *
 * @version 0.4.6
 * @source https://github.com/thanpolas/practice/blob/master/.jshintrc
 * @see http://www.jshint.com/docs/
 * @see https://github.com/airbnb/javascript * Forked of Airbnb JSHint settings.
 */
{
  /*
   * ENVIRONMENTS
   * =================
   */

  // Define globals exposed by modern browsers.
  "browser": false,

  // Define globals exposed by jQuery.
  "jquery": false,

  // Define globals exposed by Node.js.
  "node": true,

  /*
   * TABS AND QUOTES
   * ==================
   */
  // Enforce tab width of 2 spaces.
  "indent": 2,

  // Enforce use of single quotation marks for strings.
  "quotmark": "single",

  /*
   * ENFORCING OPTIONS
   * =================
   */

  // This option requires you to always put curly braces
  // around blocks in loops and conditionals.
  "curly": true,

  // This option prohibits the use of immediate function
  // invocations without wrapping them in parentheses.
  "immed": true,

  // This option prohibits the use of arguments.caller
  // and arguments.callee. Both .caller and .callee make
  // quite a few optimizations impossible so they were
  // deprecated in future versions of JavaScript.
  "noarg": true,

  // This option suppresses warnings about the use of
  // assignments in cases where comparisons are expected
  "boss": true,

  // Force all variable names to use either camelCase style
  // or UPPER_CASE with underscores.
  "camelcase": true,

  // Prohibit use of == and != in favor of === and !==.
  "eqeqeq": true,

  // Suppress warnings about == null comparisons.
  "eqnull": true,

  // Prohibit use of a variable before it is defined.
  "latedef": true,

  // Require capitalized names for constructor functions.
  "newcap": true,

  // Prohibit trailing whitespace.
  "trailing": true,

  // Prohibit use of explicitly undeclared variables.
  "undef": true,

  // Warn when variables are defined but never used.
  "unused": true,

  // do not complain for lack of 'use strict';
  "globalstrict": false,
  "strict": false,

  // This option suppresses warnings about the use of expressions where
  // normally you would expect to see assignments or function calls.
  // Most of the time, such code is a typo. However, it is not forbidden
  // by the spec and that's why this warning is optional.
  "expr": false,

  // This option suppresses warnings about the use of eval.
  // The use of eval is discouraged because it can make your code
  // vulnerable to various injection attacks and it makes it hard for
  // JavaScript interpreter to do certain optimizations.
  "evil": false,

  // This option suppresses warnings about comma-first coding style.
  "laxcomma": false,

  // suppress object dot notation warnings, we know what we're doing
  "sub": true,

  // This option defines globals that are usually used for logging poor-man's
  // debugging: console, alert, etc. It is usually a good idea to not ship
  // them in production because, for example, console.log breaks in legacy
  // versions of Internet Explorer.
  "devel": false,

  // This option suppresses warnings about mixed tabs and spaces when the
  // latter are used for alignmnent only. The technique is called SmartTabs.
  "smarttabs": false,

  /**
   * TEMPORARY OPTIONS
   * =================
   *
   * These are provisional options for legacy code.
   *
   */

  /**
   * PROJECT GLOBALS
   * ================
   *
   */
  "globals": {
    /* MOCHA */
    "suite": false,
    "test": false,
    "describe": false,
    "it": false,
    "setup": false,
    "before": false,
    "beforeEach": false,
    "after": false,
    "afterEach": false,
    "teardown": false,
    "assert": false
  }
}
